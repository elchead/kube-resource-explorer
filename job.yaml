apiVersion: batch/v1
kind: Job
metadata:
  name: job
  namespace: playground
spec:
  template:
    spec:
      initContainers:
            - command:
                - sh
                - -c
                - cp -r -v /engines/* /var/tmp/engines
              image: scoptimizer.common.repositories.cloud.sap/performance/engines:latest
              imagePullPolicy: Always
              name: worker-engines
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
              volumeMounts:
                - name: worker-engines
                  mountPath: /var/tmp/engines
            - name: init-script-downloader
              image: appropriate/curl
              args:
                  - "-o"
                  - "/tmp/data/tes.sql" # we are saving downloaded file as init.sql in /tmp/data directory
                  - "https://raw.githubusercontent.com/kubedb/mysql-init-scripts/master/init.sql" # download url
              volumeMounts:
                - name: input # mount the volume where downloaded file will be saved
                  mountPath: /tmp/data
      containers:
      - name: ubuntu
        image: busybox:latest
        command: [ "/bin/sh", "-c", "--" ]
        args: [ "while true; do sleep 30; done;" ]
        volumeMounts:
        - name: data
          mountPath: /data
      - name: test
        image: scoptimizer.common.repositories.cloud.sap/development/worker/adrian
        command: ["/engines/snpopsvr",  "-application:itso","-file:/input/testFile.in","-mode:service","-runtime:86000"]
        workingDir: "/tmp"
        # command: [ "/bin/bash", "-c", "--" ]
        args: [ "while true; do sleep 30; done;" ]
        volumeMounts:
        - name: input
          mountPath: /input
        - name: data
          mountPath: /var/data
        - name: worker-engines
          mountPath: /engines
        env:
        - name: LD_LIBRARY_PATH
          value: /engines
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 0
      volumes:
      - name: input
        emptyDir: {}
        # configMap:
        #   name: input
      - emptyDir: {}
        name: worker-engines
      - emptyDir: {}
        name: data
      restartPolicy: Never
      imagePullSecrets:
      - name: regcred
  backoffLimit: 4

